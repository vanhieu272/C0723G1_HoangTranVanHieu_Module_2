<component name="CopyrightManager">
  <copyright>
    <option name="notice" value="public class MovieTicketRepoImpl implements IMovieTicketRepo {&#10;    final String COMMA = &quot;,&quot;;&#10;    private final String LIST_TICKET_PATH = &quot;D:\\Codegym\\module-2\\src\\MVC\\MovieTicket\\data\\list_tickets.csv&quot;;&#10;&#10;    @Override&#10;    public void create(MovieTicket movieTicket) {&#10;        boolean flag = false;&#10;        List&lt;MovieTicket&gt; movieTickets = readTicketsFromFile();&#10;        for(MovieTicket movieTicket1 : movieTickets){&#10;            if(movieTicket1.getTicketID().equals(movieTicket.getTicketID())){&#10;                flag = true;&#10;                break;&#10;            }&#10;        }&#10;        if(!flag){&#10;            movieTickets.add(movieTicket);&#10;        }&#10;        writeTicketsToFile(movieTickets);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;MovieTicket&gt; getAll() {&#10;        return readTicketsFromFile();&#10;    }&#10;&#10;    @Override&#10;    public void remove(String ticketID) {&#10;        List&lt;MovieTicket&gt; movieTickets = readTicketsFromFile();&#10;        for(MovieTicket movieTicket1 : movieTickets){&#10;            if(movieTicket1.getTicketID().equals(ticketID)){&#10;                movieTickets.remove(movieTicket1);&#10;                break;&#10;            }&#10;        }&#10;        writeTicketsToFile(movieTickets);&#10;    }&#10;&#10;    @Override&#10;    public void update(MovieTicket movieTicket) {&#10;        List&lt;MovieTicket&gt; movieTickets = readTicketsFromFile();&#10;        for(MovieTicket movieTicket1 : movieTickets){&#10;            if(movieTicket1.getTicketID().equals(movieTicket.getTicketID())){&#10;                movieTicket1.setMovieName(movieTicket.getMovieName());&#10;                movieTicket1.setPrice(movieTicket.getPrice());&#10;                movieTicket1.setShowing(movieTicket.getShowing());&#10;                movieTicket1.setDate(movieTicket.getDate());&#10;                break;&#10;            }&#10;        }&#10;        writeTicketsToFile(movieTickets);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;MovieTicket&gt; sortByPrice() {&#10;        List&lt;MovieTicket&gt; movieTickets = readTicketsFromFile();&#10;        List&lt;MovieTicket&gt; ascendingOrder = new ArrayList&lt;&gt;();&#10;        movieTickets.sort((o1, o2) -&gt; {&#10;            if (o1.getPrice() &lt; o2.getPrice()) {&#10;                return -1;&#10;            } else if (o1.getPrice() == o2.getPrice()) {&#10;                return 0;&#10;            } else {&#10;                return 1;&#10;            }&#10;        });&#10;        ascendingOrder.addAll(movieTickets);&#10;        return ascendingOrder;&#10;    }&#10;&#10;&#10;    public List&lt;String&gt; readFile(String pathName) {&#10;        FileReader fileReader = null;&#10;        BufferedReader bufferedReader = null;&#10;        try {&#10;            File file = new File(pathName);&#10;            if (!file.exists()) {&#10;                return new ArrayList&lt;&gt;();&#10;            }&#10;            fileReader = new FileReader(file);&#10;            bufferedReader = new BufferedReader(fileReader);&#10;            List&lt;String&gt; data = new ArrayList&lt;&gt;();&#10;            String str;&#10;            while ((str = bufferedReader.readLine()) != null) {&#10;                data.add(str);&#10;            }&#10;            return data;&#10;        } catch (IOException e) {&#10;            throw new RuntimeException(e);&#10;        } finally {&#10;            try {&#10;                if (bufferedReader != null) {&#10;                    bufferedReader.close();&#10;                }&#10;                if (fileReader != null) {&#10;                    fileReader.close();&#10;                }&#10;            } catch (IOException e) {&#10;                throw new RuntimeException(e);&#10;            }&#10;        }&#10;    }&#10;&#10;    public void writeFile(String pathName, List&lt;String&gt; data) {&#10;        FileWriter fileWriter = null;&#10;        BufferedWriter bufferedWriter = null;&#10;        try {&#10;            File file = new File(pathName);&#10;            if (!file.exists()) {&#10;                file.createNewFile();&#10;            }&#10;            fileWriter = new FileWriter(file);&#10;            bufferedWriter = new BufferedWriter(fileWriter);&#10;            for (String str : data) {&#10;                bufferedWriter.write(str);&#10;                bufferedWriter.newLine();&#10;            }&#10;        } catch (IOException e) {&#10;            throw new RuntimeException(e);&#10;        } finally {&#10;            try {&#10;                if (bufferedWriter != null) {&#10;                    bufferedWriter.close();&#10;                }&#10;                if (fileWriter != null) {&#10;                    fileWriter.close();&#10;                }&#10;            } catch (IOException e) {&#10;                throw new RuntimeException(e);&#10;            }&#10;        }&#10;    }&#10;&#10;&#10;    public List&lt;String&gt; convertOBJToString(List&lt;MovieTicket&gt; movieTickets) {&#10;        List&lt;String&gt; data = new ArrayList&lt;&gt;();&#10;        for (MovieTicket movieTicket : movieTickets) {&#10;            data.add(movieTicket.getTicketID()&#10;                    + COMMA + movieTicket.getMovieName()&#10;                    + COMMA + movieTicket.getPrice()&#10;                    + COMMA + movieTicket.getShowing()&#10;                    + COMMA + movieTicket.getDate());&#10;        }&#10;        return data;&#10;    }&#10;&#10;    public List&lt;MovieTicket&gt; convertStringToObj(List&lt;String&gt; data) {&#10;        List&lt;MovieTicket&gt; students = new ArrayList&lt;&gt;();&#10;        for (String str : data) {&#10;            String[] splittedStr = str.split(COMMA);&#10;            students.add(new MovieTicket(splittedStr[0], splittedStr[1], Float.parseFloat(splittedStr[2]),&#10;                    splittedStr[3], splittedStr[4]));&#10;        }&#10;        return students;&#10;    }&#10;&#10;    public List&lt;MovieTicket&gt; readTicketsFromFile(){&#10;        List&lt;String&gt; data = readFile(LIST_TICKET_PATH);&#10;        return convertStringToObj(data);&#10;    }&#10;&#10;    public void writeTicketsToFile(List&lt;MovieTicket&gt; movieTickets){&#10;        List&lt;String&gt; data = convertOBJToString(movieTickets);&#10;        writeFile(LIST_TICKET_PATH,data);&#10;    }&#10;}" />
    <option name="myName" value="repo" />
  </copyright>
</component>